// Code generated by jtd-codegen for TypeScript v0.2.1

/**
 * The `advanced_dom_available` event logs an instance where the DOM has been
 * loaded and is available for interaction.
 */

/**
 * The `advanced_dom_changed` event logs an instance where the DOM has been
 * changed in any way, such as an element being added, removed, or modified.
 */

/**
 * The `advanced_dom_clicked` event logs an instance where any element on the
 * page has been clicked
 */

/**
 * The action that was taken with the clipboard.
 */
let PixelEventsAdvancedDomClipboardDataAction;
(function (PixelEventsAdvancedDomClipboardDataAction) {
  PixelEventsAdvancedDomClipboardDataAction["Copy"] = "copy";
  PixelEventsAdvancedDomClipboardDataAction["Cut"] = "cut";
  PixelEventsAdvancedDomClipboardDataAction["Paste"] = "paste";
})(PixelEventsAdvancedDomClipboardDataAction || (PixelEventsAdvancedDomClipboardDataAction = {}));
let AlertDisplayedType;

/**
 * Custom attributes associated with the cart or checkout.
 */
(function (AlertDisplayedType) {
  AlertDisplayedType["CheckoutError"] = "CHECKOUT_ERROR";
  AlertDisplayedType["ContactError"] = "CONTACT_ERROR";
  AlertDisplayedType["DeliveryError"] = "DELIVERY_ERROR";
  AlertDisplayedType["DiscountError"] = "DISCOUNT_ERROR";
  AlertDisplayedType["InputInvalid"] = "INPUT_INVALID";
  AlertDisplayedType["InputRequired"] = "INPUT_REQUIRED";
  AlertDisplayedType["InventoryError"] = "INVENTORY_ERROR";
  AlertDisplayedType["MerchandiseError"] = "MERCHANDISE_ERROR";
  AlertDisplayedType["PaymentError"] = "PAYMENT_ERROR";
})(AlertDisplayedType || (AlertDisplayedType = {}));
let EventType;

/**
 * An object that contains data about a form element type
 */
(function (EventType) {
  EventType["AdvancedDom"] = "advanced-dom";
  EventType["Custom"] = "custom";
  EventType["Dom"] = "dom";
  EventType["Meta"] = "meta";
  EventType["Standard"] = "standard";
})(EventType || (EventType = {}));
let UiExtensionErrorType;

/**
 * A snapshot of a subset of properties of the `document` object in the top
 * frame of the browser
 */
(function (UiExtensionErrorType) {
  UiExtensionErrorType["ExtensionUsageError"] = "EXTENSION_USAGE_ERROR";
})(UiExtensionErrorType || (UiExtensionErrorType = {}));

export { AlertDisplayedType, EventType, PixelEventsAdvancedDomClipboardDataAction, UiExtensionErrorType };
