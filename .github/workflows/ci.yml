name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Generate Prisma client
      run: npx prisma generate
      
    - name: Run linting
      run: npm run lint
      
    - name: Build application
      run: npm run build
      
    - name: Start development server
      run: |
        # Start server in background and capture PID
        npm run dev > server.log 2>&1 &
        echo $! > server.pid
        
        # Wait for server to be ready
        timeout 60 bash -c 'until curl -f http://localhost:3000/api/test; do sleep 2; done'
        
    - name: Verify server is running
      run: |
        # Double-check server is still running
        curl -f http://localhost:3000/api/test || exit 1
        
    - name: Run app tests
      run: npm run test:app
      
    - name: Check health endpoint
      run: |
        # Test health endpoint
        curl -f http://localhost:3000/api/health || exit 1
        
    - name: Stop development server
      run: |
        # Stop server using PID
        if [ -f server.pid ]; then
          kill $(cat server.pid) || true
          rm server.pid
        fi
        # Also try to kill any remaining npm processes
        pkill -f "npm run dev" || true

  # Note: Vercel deployment is handled automatically via Vercel's Git integration
  # No additional deployment steps needed in GitHub Actions 